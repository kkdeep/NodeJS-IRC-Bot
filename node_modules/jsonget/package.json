{
  "name": "jsonget",
  "description": "A JSON-P shim around Superagent for zeroconf json-p usage where required",
  "author": {
    "name": "Damon Oehlman",
    "email": "damon.oehlman@sidelab.com"
  },
  "tags": [
    "json",
    "xhr"
  ],
  "version": "0.1.1",
  "main": "dist/commonjs/jsonget",
  "engines": {
    "node": ">= 0.6.x < 0.9.0"
  },
  "dependencies": {
    "debug": "*",
    "superagent": "0.4.x"
  },
  "devDependencies": {
    "mocha": "1.x.x",
    "expect.js": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/DamonOehlman/jsonp.git"
  },
  "bugs": {
    "url": "http://github.com/DamonOehlman/jsonp/issues"
  },
  "scripts": {
    "test": "mocha --reporter spec -t 20000"
  },
  "contributors": [],
  "optionalDependencies": {},
  "readme": "# jsonget\n\nThis is a very simply library that wraps superagent to provide JSONP support where required.  The idea being that regardless of your environment, server, CORS-compliant browser, old broken browser, you can call `jsonget` and get the data you need.\n\nAs per the name it is built to handle `GET` requests only.  Primarily, because if you are using JSONP you ain't going to be using anything but.\n\n## Example Usage\n\nGeonames example:\n\n```js\njsonget('http://api.geonames.org/searchJSON', { q: 'brisbane', maxRows: 10, lang: 'en', username: 'demo' }, function(err, data) {\n    // do something\n});\n```\n\n## NOTES\n\nAt this stage jsonget does not have any error detection for a failed script load, and in fact all that probably will be possible is to monitor for timeout errors.  This will be investigated though.\n",
  "_id": "jsonget@0.1.1",
  "dist": {
    "shasum": "b5ca069d4d73eb89cb616a2b64ad51d3e25b1605"
  },
  "_from": "jsonget"
}
